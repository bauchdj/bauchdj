---
import { getEntryBySlug } from "astro:content";

const params = Astro.params;
if (!params.articleSlug || (params.articleSlug && typeof params.articleSlug !== "string")) {
    return null;
}

const article = await getEntryBySlug("blog", params.articleSlug);
const publicationDate = new Date(article?.data.publicationDate);
---

<title>{article?.data.title} | Flavien Bonvin</title>
<meta name="description" content={article?.data.excerpts} />

<link rel="canonical" href={Astro.request.url} />

<meta property="og:site_name" content="Flavien Bonvin" />
<meta property="og:title" content={article?.data.title} />
<meta property="og:description" content={article?.data.excerpts} />
<meta property="og:type" content="article" />
<meta property="og:url" content={Astro.request.url} />
<meta property="article:published_time" content={publicationDate.toISOString()} />
<meta property="article:tag" content={article?.data.tags?.join(", ")} />
<!-- <meta property="og:image" content={} /> -->
<!-- <meta property="og:image:width" content="" /> -->
<!-- <meta property="og:image:height" content="" /> -->

<meta name="twitter:card" content="summary" />
<meta name="twitter:title" content={article?.data.title} />
<meta name="twitter:description" content={article?.data.excerpts} />
<meta name="twitter:url" content={Astro.request.url} />
<meta name="twitter:label1" content="Written by" />
<meta name="twitter:data1" content="Flavien Bonvin" />
<meta name="twitter:site" content="@FlavienBonvin" />
<meta name="twitter:creator" content="@FlavienBonvin" />
<!-- <meta property="og:image" content={} /> -->
