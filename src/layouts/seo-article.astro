---
import { getEntryBySlug } from "astro:content";
import { CONFIG } from "const";

const params = Astro.params;
if (!params.slug) {
    return null;
}

const article = await getEntryBySlug("blog", params.slug);
---

<title>{article?.data.title} | {CONFIG.author}</title>
<meta name="description" content={article?.data.description} />

<link rel="canonical" href={Astro.request.url} />

<meta property="og:site_name" content=`${CONFIG.author}` />
<meta property="og:title" content={article?.data.title} />
<meta property="og:description" content={article?.data.description} />
<meta property="og:type" content="article" />
<meta property="og:url" content={Astro.request.url} />
<meta property="article:published_time" content={article?.data.publicationDate.toISOString()} />
<meta property="article:tag" content={article?.data.tags?.join(", ")} />
<meta property="og:image" content={`${Astro.site}${article?.data.ogImage.src}`} />
<meta property="og:image:width" content={article?.data.ogImage.width.toString()} />
<meta property="og:image:height" content={article?.data.ogImage.height.toString()} />

<meta name="twitter:card" content="summary" />
<meta name="twitter:title" content={article?.data.title} />
<meta name="twitter:description" content={article?.data.description} />
<meta name="twitter:url" content={Astro.request.url} />
<meta name="twitter:label1" content="Written by" />
<meta name="twitter:data1" content=`${CONFIG.author}` />
<meta name="twitter:site" content=`@${CONFIG.twitter}` />
<meta name="twitter:creator" content=`@${CONFIG.twitter}` />
<meta property="og:image" content={`${Astro.site}${article?.data.ogImage.src}`} />
